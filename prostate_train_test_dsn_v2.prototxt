# Simple single-layer network to showcase editing model parameters.
layer {
  name: "data"
  type: "HDF5Data"
  top: "dataMR"
  top: "dataCT"
  include {
    phase: TRAIN 
  }
  hdf5_data_param {
    source: "./trainProstate32_24_padding_list.txt"
    batch_size: 10
    shuffle: true 
  }
#MR: 32*32*32
#CT: 24*24*24 
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "dataMR"
  top: "dataCT"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "./testProstate32_24_padding_list.txt"
    batch_size: 10
    shuffle: true
  }
}
#-------------layer group 1---------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "dataMR"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 5 
    #pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "conv1"
  top: "conv1a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU" 
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a"
  top: "conv1b"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1b"
  type: "ReLU"
  bottom: "conv1b"
  top: "conv1b"
}
layer {
  name: "conv1c"
  type: "Convolution"
  bottom: "conv1b"
  top: "conv1c"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1c"
  type: "ReLU"
  bottom: "conv1c"
  top: "conv1c"
}
## DSN conv 1 ###
layer { name: 'score-dsn1' type: "Convolution" bottom: 'conv1c' top: 'score-dsn1-up'
  param { lr_mult: 1 decay_mult: 1} param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn1-up' bottom: 'dataCT' top: 'upscore-dsn1' }
layer { type: "EuclideanLoss" bottom: "upscore-dsn1" bottom: "dataCT" top:"dsn1_loss"  loss_weight: 1}

layer {
  name: "conv1d"
  type: "Convolution"
  bottom: "conv1c"
  top: "conv1d"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1d"
  type: "ReLU"
  bottom: "conv1d"
  top: "conv1d"
}
#-------------layer group 2---------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1d"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5 
    #pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "conv2"
  top: "conv2a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
## DSN conv 2 ###
layer { name: 'score-dsn2' type: "Convolution" bottom: 'conv2a' top: 'score-dsn2-up'
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn2-up' bottom: 'dataCT' top: 'upscore-dsn2' }
layer { type: "EuclideanLoss" bottom: "upscore-dsn2" bottom: "dataCT" top:"dsn2_loss"  loss_weight: 1}
layer {
  name: "conv2b"
  type: "Convolution"
  bottom: "conv2a"
  top: "conv2b"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2b"
  type: "ReLU"
  bottom: "conv2b"
  top: "conv2b"
}
layer {
  name: "conv2c"
  type: "Convolution"
  bottom: "conv2b"
  top: "conv2c"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2c"
  type: "ReLU"
  bottom: "conv2c"
  top: "conv2c"
}
#-------------layer 3---------------
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "conv2c"
  top: "conv3a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3 
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: 'score-dsn3' type: "Convolution" bottom: 'conv3a' top: 'score-dsn3-up'
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn3-up' bottom: 'dataCT' top: 'upscore-dsn3' }
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "upscore-dsn3"
  bottom: "dataCT"
  top: "dsn3_loss"
  loss_weight: 1 
#  loss_param {
#    ignore_label: -1
#  }
#  softmax_param {
#    axis: 1
#  }
#  include: { phase: TRAIN }
}
#layer {
#  name: "loss"
#  type: "EuclideanLoss"
#  bottom: "conv3a"
#  bottom: "dataCT"
#  top: "loss"
#  loss_param {
#    ignore_label: -1
#  }
#  softmax_param {
#    axis: 1
#  }
#  include: { phase: TEST }
#}

### Concat and multiscale weight layer ###


layer { name: "concat" bottom: "upscore-dsn1"  bottom: "upscore-dsn2" bottom: "upscore-dsn3" 
         top: "concat-upscore" type: "Concat"
  concat_param { concat_dim: 1} }
layer { name: 'new-score-weighting' type: "Convolution" bottom: 'concat-upscore' top: 'upscore-fuse'
  param { lr_mult: 0.1 decay_mult: 1 } param { lr_mult: 0.2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 weight_filler {type: "xavier"} } }
layer { type: "EuclideanLoss" bottom: "upscore-fuse" bottom: "dataCT" top:"fuse_loss"  loss_weight: 1}
